---DROP ALL FOREIGN KEYS
while(exists(select 1 from INFORMATION_SCHEMA.TABLE_CONSTRAINTS where CONSTRAINT_TYPE='FOREIGN KEY'))
begin
	declare @sql nvarchar(2000)
	SELECT TOP 1 @sql=('ALTER TABLE ' + TABLE_SCHEMA + '.[' + TABLE_NAME
	+ '] DROP CONSTRAINT [' + CONSTRAINT_NAME + ']')
	FROM information_schema.table_constraints
	WHERE CONSTRAINT_TYPE = 'FOREIGN KEY'
	exec (@sql)
end 


--CREATE TABLES WITH PKS
IF OBJECT_ID('dbo.USERS') IS NOT NULL
DROP TABLE dbo.USERS
GO
CREATE TABLE [dbo].[USERS]
(
[ID] [int] NOT NULL IDENTITY (1,1),
[USERNAME] [nvarchar](50) NOT NULL,
[PASSWORD] [nvarchar](50) NOT NULL,
[ROLE] [nvarchar](50) NOT NULL,
[NAME] [nvarchar](50) NOT NULL


CONSTRAINT [PK_USERS]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)



IF OBJECT_ID('dbo.PATIENTS') IS NOT NULL
DROP TABLE dbo.PATIENTS
GO
CREATE TABLE [dbo].[PATIENTS]
(
[ID] [int] NOT NULL IDENTITY (1,1),
[NAME] [nvarchar](50) NOT NULL,
[ADDRESS] [nvarchar](50),
[SELFHARM] [char] NOT NULL DEFAULT '0',
[PROBLEM] [nvarchar](50) NOT NULL,
[PREVIOUS_CONSULTATION] [date] NULL DEFAULT NULL,
[ISALIVE] [char] NOT NULL DEFAULT '1',
[COMMENTS] [nvarchar](50) NULL DEFAULT NULL,
[DANGEROUS] [char] NOT NULL DEFAULT '0'
CONSTRAINT [PK_PATIENTS]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)


IF OBJECT_ID('dbo.CLINICS') IS NOT NULL
DROP TABLE dbo.CLINICS
GO
CREATE TABLE [dbo].CLINICS
(
[ID] [int] NOT NULL IDENTITY (1,1),
[NAME] [nvarchar](50) NOT NULL,
[ADDRESS] [nvarchar](50),
[SUPPORTS_DROP_IN] [char] NOT NULL DEFAULT '0',
[SUPPORTS_PRE_ARRANGED] [char] NOT NULL DEFAULT '0'

CONSTRAINT [PK_CLINICS]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)




IF OBJECT_ID('dbo.INCIDENTS') IS NOT NULL
DROP TABLE dbo.INCIDENTS
GO
CREATE TABLE [dbo].INCIDENTS
(
[ID] [int] NOT NULL IDENTITY (1,1),
[PATIENT_ID] [int] NOT NULL,
[DETAILS][nvarchar](200) NOT NULL,
[INCIDENT_DATE] [date] NOT NULL,

CONSTRAINT [PK_INCIDENTS]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)


IF OBJECT_ID('dbo.TREATMENT') IS NOT NULL
DROP TABLE dbo.TREATMENT
GO
CREATE TABLE [dbo].TREATMENT
(
[ID] [int] NOT NULL IDENTITY (1,1),
[PATIENT_ID] [int] NOT NULL,
[DETAILS][nvarchar](200) NOT NULL,
[TREATMENT_DATE] [date] NOT NULL,

CONSTRAINT [PK_TREATMENT]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)


IF OBJECT_ID('dbo.ALLERGYS') IS NOT NULL
DROP TABLE dbo.ALLERGYS
GO
CREATE TABLE [dbo].ALLERGYS
(
[ID] [int] NOT NULL IDENTITY (1,1),
[NAME] [nvarchar](50) NOT NULL

CONSTRAINT [PK_ALLERGYS]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)


IF OBJECT_ID('dbo.PATIENTS_ALLERGYS') IS NOT NULL
DROP TABLE dbo.PATIENTS_ALLERGYS
GO
CREATE TABLE [dbo].PATIENTS_ALLERGYS
(
[ID] [int] NOT NULL IDENTITY (1,1),
[PATIENT_ID] [int] NOT NULL,
[ALLERGY_ID] [int] NOT NULL

CONSTRAINT [PK_PATIENTS_ALLERGYS]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)


IF OBJECT_ID('dbo.OVERRULED_WARNING') IS NOT NULL
DROP TABLE dbo.OVERRULED_WARNING
GO
CREATE TABLE [dbo].OVERRULED_WARNING
(
[ID] [int] NOT NULL IDENTITY (1,1),
[ID_PATIENTS_ALLERGYS] [int]NOT NULL,
[USERID] [int] NOT NULL

CONSTRAINT [PK_OVERRULED_WARNING]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)


IF OBJECT_ID('dbo.APPOINTMENTS') IS NOT NULL
DROP TABLE dbo.APPOINTMENTS
GO
CREATE TABLE [dbo].APPOINTMENTS
(
[ID] [int] NOT NULL IDENTITY (1,1),
[PATIENT_ID] [int] NOT NULL,
[CLINIC_ID] [int] NOT NULL,
[APP_DATE] [date] NOT NULL,
[DOCTOR] [nvarchar](50) NOT NULL,

CONSTRAINT [PK_APPOINTMENTS]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)


IF OBJECT_ID('dbo.REQUESTS') IS NOT NULL
DROP TABLE dbo.REQUESTS
GO
CREATE TABLE [dbo].REQUESTS
(
[ID] [int] NOT NULL IDENTITY (1,1),
[PATIENT_ID] [int] NOT NULL,
[PATIENT_NEW_NAME] [nvarchar](50) NOT NULL,
[NEW_ADDRESS] [nvarchar](50),

CONSTRAINT [PK_REQUESTS]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)


IF OBJECT_ID('dbo.DRUGS') IS NOT NULL
DROP TABLE dbo.DRUGS
GO
CREATE TABLE [dbo].DRUGS
(
[ID] [int] NOT NULL IDENTITY (1,1),
[NAME] [nvarchar](50) NOT NULL,
[SIDE_EFFECTS] [nvarchar](50)

CONSTRAINT [PK_DRUGS]
PRIMARY KEY CLUSTERED
( [ID] ASC )
)


